exp(fit$sigma.coefficients),
fit$nu.coefficients,
exp(fit$tau.coefficients))
}
return(fit_par)
}
g_fit("lep", y)
lgamma
x <- seq(0.00001, 0.9999, l = 50)
g_fit("ll", x)
library(tidyverse)
# Base de gêneros
genre <- chorrrds::genre
da <- chorrrds::all %>%
dplyr::mutate(date = stringr::str_extract(date,
pattern = "[0-9]{4,}")) %>%
# Extrai apenas os anos
dplyr::mutate(date = as.numeric(date), # Deixa as datas como valores numéricos
acorde = stringr::str_extract(chord, # Extrai as partes fundamentais dos
pattern = "^([A-G]#?b?)")) %>%  # acordes
dplyr::filter(date > 1900) %>% # Mantém apenas os anos que fazem sentido
dplyr::left_join(genre, by = "artist") %>%  # Traz os gêneros dos artistas
dplyr::mutate(acorde = case_when( # Contribuição do
acorde == "Db" ~ "C#",          # Julio Trecenti
acorde == "Gb" ~ "F#",
acorde == "G#" ~ "Ab",
acorde == "A#" ~ "Bb",
acorde == "D#" ~ "Eb",
acorde == "E#" ~ "F",
acorde == "B#" ~ "C",
TRUE ~ acorde)) # Conversão de enarmonias
library(ggplot2)
da_g <- da %>% dplyr::mutate(date < 2018) %>%  # 2018 ainda não é um ano completo
dplyr::group_by(date, genre, music, chord) %>% # Agrupamento por data +
#  + acorde + musica
dplyr::summarise(distintos = n_distinct(chord)) %>% # Mantém os acordes
# distintos/ano
dplyr::summarise(cont = n()) %>%
dplyr::summarise(media = mean(cont), contagem = n()) # Média de
da_g %>% ggplot(aes(x = date, y = media)) +
geom_point(colour = "skyblue3") +
facet_wrap("genre") +
geom_smooth(span = 0.65, colour = "white", fill = "tan") +
scale_fill_hue(c = 55, l = 75) +
theme(legend.position='none',
axis.line = element_line(size = 0.5,
colour = "tan"),
panel.grid.major = element_line(colour = "black",
size = 0.08,
linetype = "dotted"),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(colour = "tan",
fill = "white",
size = 0.6),
strip.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
labs(x = "Anos",
y = "Média de acordes/música")
da_g %>% ggplot(aes(x = date, y = media)) +
geom_point(colour = "skyblue3") +
facet_wrap("genre") +
geom_smooth(span = 0.65, colour = "white", fill = "tan") +
scale_fill_hue(c = 55, l = 75) +
theme(legend.position='none',
axis.line = element_line(size = 0.5,
colour = "tan"),
panel.grid.major = element_line(colour = "black",
size = 0.08,
linetype = "dotted"),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(colour = "tan",
fill = "white",
size = 0.6),
strip.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
labs(x = "Anos",
y = "Média de acordes/música")
library(ggplot2)
da_g <- da %>% dplyr::mutate(date < 2018) %>%  # 2018 ainda não é um ano completo
dplyr::group_by(date, genre, music, chord) %>% # Agrupamento por data +
#  + acorde + musica
dplyr::summarise(distintos = n_distinct(chord)) %>% # Mantém os acordes
# distintos/ano
dplyr::summarise(cont = n()) %>%
dplyr::summarise(media = mean(cont), contagem = n()) # Média de
da_g %>% ggplot(aes(x = date, y = media)) +
geom_point(colour = "skyblue3") +
facet_wrap("genre") +
geom_smooth(span = 0.65, colour = "white", fill = "tan") +
scale_fill_hue(c = 55, l = 75)
da_g <- da %>%
# 2018 ainda não é um ano completo
dplyr::mutate(date < 2018) %>%
# Agrupamento por data + acorde + musica
dplyr::group_by(date, genre, music, chord) %>%
# Mantém os acordes distintos/ano
dplyr::summarise(distintos = n_distinct(chord)) %>%
dplyr::summarise(cont = n()) %>%
# Média de acordes distintos nas músicas/ano
dplyr::summarise(media = mean(cont), contagem = n())
# grafico
p <- da_g %>%
ggplot(aes(x = date, y = media)) +
geom_point(colour = "skyblue3") +
facet_wrap("genre") +
scale_fill_hue(c = 55, l = 75) +
geom_smooth(span = 0.65, colour = "white",
fill = "tan", method = "loess") +
labs(x = "Anos", y = "Média de acordes/música")
# tema para deixar o gráfico bonitinho
tema <- theme(
legend.position='none',
axis.line = element_line(size = 0.5, colour = "tan"),
panel.grid.major = element_line(
colour = "black", size = 0.08, linetype = "dotted"),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(colour = "tan", fill = "white", size = 0.6),
strip.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12))
p + tema
#-----------------------------------------------------
library(chorrrds)
artista <- "chico-buarque"
nomes <- chorrrds::get_songs(artista)
acordes <- chorrrds::
head(songs)
nomes <- chorrrds::get_songs(artista)
nomes
acordes <- chorrrds::get_chords(nomes$url)
head(acordes)
#-----------------------------------------------------
# install.packages(“chorrrds”)
library(tidyverse)
head(nome)
head(nomes)
"a banda" %in% nomes$name
# letras por música específica
nomes <- nomes[nomes$name %in% "a banda"]
nomes
stringr::str_detect(nomes$name, "a banda")
nomes$name
purrr::map(nomes$name, stringr::str_detect("a banda"))
purrr::map(nomes$name, stringr::str_detect, pattern = "a banda")
nomes$name
head(nomes)
nomes <- chorrrds::get_songs(artista)
# letras por música específica
purrr::map(nomes$name, stringr::str_detect, pattern = "a banda")
# letras por música específica
stringr::str_detect(nomes$name, "a banda")
# letras por música específica
nomes %>% filter(stringr::str_detect(name, pattern  = "a banda"))
# letras por música específica
musica <- nomes %>% filter(stringr::str_detect(name, pattern  = "a banda"))
acordes <- chorrrds::get_chords(musica$url)
acordes
#-----------------------------------------------------
head(acordes)
acordes$music[1]
acordes <- acordes %>%
dplyr::mutate(musica_nome =
stringr::str_replace(music, '\chico buarque '))
acordes <- acordes %>%
dplyr::mutate(musica_nome =
stringr::str_replace(music, "\\chico buarque "))
acordes <- acordes %>%
dplyr::mutate(musica_nome =
stringr::str_remove(music, "\\chico buarque "))
head(acordes)
acordes$music[1]
acordes <- acordes %>%
dplyr::mutate(musica_nome =
stringr::str_remove(music, "chico buarque "))
head(acordes)
head(letras)
library(vagalumeR)
key <- "3f4f4a35789cae8ce84b5579069db511"
chave <- key
artista <- "chico-buarque"
ids <- songNames(artista)
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
library(vagalumeR)
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
library(vagalumeR)
ids <- songNames(artista)
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
lyrics <- function(identifier, type, artist, key, message = TRUE){
artist <- stringr::str_to_lower(artist)
if(type == "id"){
req <-httr::GET(paste("https://api.vagalume.com.br/search.php?musid=",
identifier,"&apikey=", key))
}
if(type == "name"){
req <- httr::GET(paste("https://api.vagalume.com.br/search.php?art=",
artist,"&mus=",identifier,"&extra=relmus&apikey=", key))
}
cont <- httr::content(req, encoding = "UTF-8")
if(!is.null(cont)){
l <- lapply(cont$mus, "[", c("id", "name", "lang", "text"))
l <- plyr::ldply(l, data.frame)
mus <- data.frame(id = cont$art$id,
name = cont$art$name,
song.id = l$id,
song = l$name,
language = l$lang,
text = l$text)
mus$text <- as.character(mus$text)
mus$text <- stringr::str_replace_all(mus$text, "[\n]" , " ")
if(!is.null(cont$mus[[1]]$lang) && cont$mus[[1]]$lang > 1){
if(!is.null(cont$mus[[1]]$translate)){
tr <- lapply(cont$mus[[1]]$translate, "[", c("text"))
tr <- plyr::ldply(tr, data.frame)
mus <- data.frame(mus, tr$text)
mus$tr.text <- as.character(mus$tr.text)
mus$tr.text <- stringr::str_replace_all(mus$tr.text, "[\n]" , " ")
}
}
} else{
mus <- NULL
if(message) print("Lyrics not found") }
return(mus)
}
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
head(letra)
acordes <- acordes %>%
dplyr::mutate(musica_nome =
stringr::str_remove(song, "chico buarque "))
acordes <- acordes %>%
dplyr::mutate(song =
stringr::str_remove(music, "chico buarque "))
let <- letra %>% stringr::str_to_lower(song)
head(letra)
letra <-
# letras por nome da música
letra <- lyrics("a-banda", artist = "chico-buarque",
key = chave, type = "name")
#---------------------------------
library(music21)
music21
acordes$chord[1]
acordes$chord[5]
acordes <- acordes %>%
dplyr::mutate(chord = stringr::str_extract(chord, pattern = "^([A-G]#?b?)"))
head(acordes)
note <- music21$note$Note(acordes$chord[5])
note
note %>%  plot()
note <- music21$note$Note(acordes$chord[1:5])
f <- function(ac){
music21$note$Note(ac)
}
f(acordes$chord[1])
f(acordes$chord[1:5])
map(acordes$chord[1:5], f)
map(acordes$chord[1:5], f) %>% plot()
class(note)
par(mfrow(c = (2, 1)))
note[[1]]
tt[[1]]
tt <- map(acordes$chord[1:5], f)
tt[[1]]
tt[[1]] %>%  plot()
par(mfrow(c = (2, 1)))
par(mfrow(c(2, 1)))
par(mfrow = c(2, 1))
tt[[1]] %>%  plot()
#---------------------------------
letra <- plyr::ldply(letra. "data.frame")
#---------------------------------
letra <- plyr::ldply(letra, "data.frame")
head(acordes)
#---------------------------------
letra <- plyr::ldply(letra, "data.frame")
head(letra)
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
#---------------------------------
letra <- plyr::ldply(letra, "data.frame")
head(letra)
head(acordes)
letra$song
letrasss <- letra %>%
dplyr::mutate(song = stringr::str_to_lower(song))
head(letrasss)
match <- dplyr::left_join(letrasss, acordes, by = "song")
head(match)
glimpse(match)
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
#---------------------------------
str(letra)
letra <- purrr::map_dfr(letra)
purrr::map_dfr
letra <- purrr::map_dfr(letra, data.frame)
#---------------------------------
str(letra)
warnings()
letra <- letra %>%
dplyr::mutate(song = stringr::str_to_lower(song))
head(letra)
match <- dplyr::left_join(letrasss, acordes, by = "song")
dim(match)
dim(letra)
dim(letra)
dim(acordes)
match <- dplyr::left_join(letra, acordes, by = "song")
dim(match)
head(match)
head(acordes)
glimpse(match)
dplyr::glimpse(match)
tail(match)
#-----------------------------------------------------
# Spotify
id <- "dcf4a5256a37451583bb7d726a404168"
#-----------------------------------------------------
# Spotify
# devtools::install_github("tiagomendesdantas/Rspotify")
library(Rspotify)
chave <- "dcf4a5256a37451583bb7d726a404168"
art <- searchArtist(artista, token = chave)
artista <- "chico-buarque"
art <- searchArtist(artista, token = chave)
#-----------------------------------------------------
# Spotify
# devtools::install_github("tiagomendesdantas/Rspotify")
library(Rspotify)
chave <- "dcf4a5256a37451583bb7d726a404168"
artista <- "chico-buarque"
art <- searchArtist(artista, token = chave)
artista <- "chico+buarque"
art <- searchArtist(artista, token = chave)
indingregina<-searchArtist("Regina+spektor",token=key)
devtools::install_github("tiagomendesdantas/Rspotify")
#-----------------------------------------------------
# Spotify
# devtools::install_github("tiagomendesdantas/Rspotify")
library(Rspotify)
chave <- "dcf4a5256a37451583bb7d726a404168"
artista <- "chico+buarque"
art <- searchArtist(artista, token = chave)
artista <- "Chico+Buarque"
art <- searchArtist(artista, token = chave)
Rspotify::searchArtist()
Rspotify::searchArtist
artistName = "chico+buarque"
req <- httr::GET(paste0("https://api.spotify.com/v1/search?q=",
gsub(" ", "+", artistName), "&type=artist"), httr::config(token = token))
token <- chave
req <- httr::GET(paste0("https://api.spotify.com/v1/search?q=",
gsub(" ", "+", artistName), "&type=artist"), httr::config(token = token))
keys <- spotifyOAuth(dcf4a5256a37451583bb7d726a404168","2aac09593fc94fdba30e02229a2bda0f") # autenticação
keys <- spotifyOAuth("dcf4a5256a37451583bb7d726a404168","2aac09593fc94fdba30e02229a2bda0f") # autenticação
keys <- spotifyOAuth("dcf4a5256a37451583bb7d726a404168",
"dcf4a5256a37451583bb7d726a404168","2aac09593fc94fdba30e02229a2bda0f") # autenticação
artista <- "Chico+Buarque"
art <- searchArtist(artista, token = chave)
art <- searchArtist(artista, token = keys)
head(art)
chico <- art[1]
info <- Rspotify::getArtist(chico)
chico
chico <- art$id[1]
info <- Rspotify::getArtist(chico)
chico
info <- Rspotify::getArtist(chico, keys)
Rspotify::getArtist
chico
chico <- art$id[1]
info <- Rspotify::getArtist(chico)
chico
art
findingregina<-searchArtist("Regina+spektor",token=keys)
findingregina
regina<-getArtistinfo("3z6Gk257P9jNcZbBXJNX5i",token=keys)
regina<-getArtist("3z6Gk257P9jNcZbBXJNX5i")
Rspotify::getArtist
id
id <- chico
req <- httr::GET(paste0("https://api.spotify.com/v1/artists/",
id))
req
Rspotify::searchArtist
req <- httr::GET(paste0("https://api.spotify.com/v1/artists/",
id), httr::config(token = keys))
req
json1 <- httr::content(req)
dados <- data.frame(id = json1$id, name = json1$name, popularity = json1$popularity,
followers = json1$followers$total, genres = paste(json1$genres,
collapse = ";"))
dados
regina.albums<-getAlbums(chico,token=keys)
regina.albums
alb <-getAlbums(chico,token=keys)
alb$id
alb <-getAlbums(chico,token=keys)  %>%
getAlbum(id, token = keys)
getAlbums(chico,token=keys)
alb$id
alb <-getAlbums(chico,token=keys)  %>%
summarise(select(id))
alb <-getAlbums(chico,token=keys)  %>%
(select(id))
alb <-getAlbums(chico,token=keys)  %>%
select(id)
alb
alb <-getAlbums(chico,token=keys)  %>%
select(id) %>% getAlbum(token = keys)
alb$id
tt <- getAlbum(alb$id, token = keys)
mus <- getAlbumInfo(album_id)
album_id <-getAlbums(chico_id, token = keys)  %>%
select(id)
chico _id <- art$id[1]
album_id <-getAlbums(chico_id, token = keys)  %>%
select(id)
chico_id <- art$id[1]
album_id <-getAlbums(chico_id, token = keys)  %>%
select(id)
mus <- getAlbumInfo(album_id$id)
mus <- purrr::map(album_id$id,
getAlbumInfo)
mus <- purrr::map(album_id$id, getAlbumInfo, token = keys)
head(mus)
getAlbums(chico_id, token = keys)
getAlbums(chico_id, token = keys)
letra$song
# todas as letras
letra <- purrr::map(ids$song.id, lyrics,
artist = artista, key = chave, type = "id")
letra$song[1]
letra
letra <- purrr::map_dfr(letra)
letra <- purrr::map_dfr(letra, data.frame)
head(letra)
letra$song[1]
acordes$music
busca <- unique(acordes$music)
busca <- dplyr::unique(acordes$music)
busca
nomes <- get_songs(artista)
artista <- "chico-buarque"
nomes <- get_songs(artista)
# letras por nome da música
letra <- lyrics("a-banda", artist = "chico-buarque",
key = chave, type = "name")
letra
# todos os acordes
acordes <- get_chords(nomes$url)
acordes
tr <- getTrack(busca)
tr <- getTrack(busca, token = "keys")
busca[1]
tr <- getTrack(busca[1], token = "keys")
getTrack
tr <- searchTrack(busca[1], token = "keys")
searchTrack
track <- busca[1]
track
req <- httr::GET(paste0("https://api.spotify.com/v1/search?q=",
gsub(" ", "+", track), "&type=track"), httr::config(token = token))
paste0("https://api.spotify.com/v1/search?q=",
gsub(" ", "+", track), "&type=track")
token
tr <- searchTrack(busca[1], token = keys)
tr
info <- getTrack(tr$id[1], token = keys)
info
info <- getFeatures(tr$id[1], token = keys)
info
nomes <- get_songs(artista)
# todos os acordes
acordes <- get_chords(nomes$url)
busca <- unique(acordes$music)
busca
tr <- searchTrack(busca[1], token = keys)
tr <- purrr::map(busca, searchTrack, token = keys))
tr <- purrr::map(busca, searchTrack, token = keys)
tr
tr <- purrr::map(busca[1:50], searchTrack, token = keys)
info <- getFeatures(tr$id[1], token = keys)
tr <- purrr::map(busca[1:15], searchTrack, token = keys)
tr <- purrr::map(busca[1:5], searchTrack, token = keys)
tr <- purrr::map(busca[1:2], searchTrack, token = keys)
tr <- purrr::map(busca[1:3], searchTrack, token = keys)
tr <- purrr::map(busca[1:4], searchTrack, token = keys)
tr <- purrr::map(busca[4], searchTrack, token = keys)
busca[4]
possibly_busca <- purrr::possibly(searchTrack, otherwise = "pular música")
possibly_track <- purrr::possibly(searchTrack, otherwise = "pular música")
tr <- purrr::map(busca, possibly_track, token = keys)
tr
info <- purrr::map(busca, possibly_track, token = keys)
load("~/.RData")
setwd("~/GIT/brunaw.github.io")
citation(package = "base")
