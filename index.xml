<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bruna Wundervald on Bruna Wundervald</title>
    <link>/</link>
    <description>Recent content in Bruna Wundervald on Bruna Wundervald</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2018 Bruna Wundervald</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The steps of a Kaggle project</title>
      <link>/talk/kaggle/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/kaggle/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git &amp; GitHub tutorial</title>
      <link>/talk/git/</link>
      <pubDate>Mon, 22 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/git/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Finding errors in R</title>
      <link>/post/2018-10-06-finding-errors/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-10-06-finding-errors/</guid>
      <description>&lt;p&gt;*Portuguese version of this same post &lt;a href=&#34;https://www.curso-r.com/blog/2018-09-03-funcoes/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;On a daily basis, I come across people on Facebook groups, Telegram or Twitter having troubles with some tasks in R. These problems have two main origins:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;difficulties in constructing the algorithm to reach the desired result.&lt;/li&gt;
&lt;li&gt;difficulties in understanding the behavior of some function.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The focus of this post is to give some notion about how to solve the second one: problems using functions. To give a little bit of context, we can say that R packages are made by the community, voluntarily. Therefore, not all package documentations are written in the clearest way possible. Also, currently, CRAN only demands a certain amount of rigor regarding the functions of a package, and not its documentation. This situation is changing for better, which can be noted by the existence of recommendations such as the following, extracted from &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;Hadley’s book about R packages&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation is one of the most important aspects of a good package. Without it, users won’t know how to use your package. Documentation is also useful for future-you (so you remember what your functions were supposed to do), and for developers extending your package.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While documentation is not perfect, users need to try to understand the unexpected errors using other resources. The method I’ll describe now is basically looking into the source code of functions and search for what is generating the troubles.&lt;/p&gt;
&lt;p&gt;There are functions that can be directly viewed in &lt;code&gt;console&lt;/code&gt;, by just printing them without the final &lt;code&gt;()&lt;/code&gt;, for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean &amp;lt;- function(x, y){
  n &amp;lt;- 2
  sum_vars &amp;lt;- x + y
  mean &amp;lt;- sum_vars/n
  mean
}

mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## function(x, y){
##   n &amp;lt;- 2
##   sum_vars &amp;lt;- x + y
##   mean &amp;lt;- sum_vars/n
##   mean
## }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just by running the name of the function we access the code that composes it. Then if we try, for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(2, &amp;quot;1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in x + y: non-numeric argument to binary operator&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, what does that mean? For the new user, it might not be so obvious, but sum 2 and “1” doesn’t work in R. Although they simply look like two numbers, they’re actually two different objects, with two different classes - 2 is a numeric, but “1” is a character.&lt;/p&gt;
&lt;p&gt;The strategy here is just to copy the function code and run line by line until the error is found. Remember to create the necessary objects first (the arguments the function receives), like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 2              # The first argument of the function
y &amp;lt;- &amp;quot;1&amp;quot;            # The second argument of the function

# Code of the created &amp;#39;mean&amp;#39; function   
n &amp;lt;- 2
sum_vars &amp;lt;- x + y  # error found here!&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in x + y: non-numeric argument to binary operator&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean &amp;lt;- sum_vars/n&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in eval(expr, envir, enclos): object &amp;#39;sum_vars&amp;#39; not found&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was pretty simple because the function has just a few lines of code, and we get the error already in the second line. Now, is way easier to think about the probable reason of the problem than just trying to interpret the error message. Sometimes, the question is exactly about using objects with the wrong structure, and this is also what causes the weirdest errors.&lt;/p&gt;
&lt;p&gt;The example above is with just a simple, short function. Usually, you’ll come across extensive functions or that when printed in the &lt;code&gt;console&lt;/code&gt; won’t show the code, but the &lt;code&gt;method&lt;/code&gt; used, for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# The mean function that exists in R base
base::mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## function (x, ...) 
## UseMethod(&amp;quot;mean&amp;quot;)
## &amp;lt;bytecode: 0x7fa397d5ef90&amp;gt;
## &amp;lt;environment: namespace:base&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And how we interpret that? We’re actually looking at a generic function of the S3 class, that calls a method to use. There are different methods for different object types.&lt;/p&gt;
&lt;p&gt;Let’s use &lt;code&gt;base::mean&lt;/code&gt; as an example. Which are the objects that can be used in this function? In general, we use numeric vectors, but the function can also deal with other types, such as dates. What we mean with this is that the &lt;strong&gt;same function can perform the same task with different object types&lt;/strong&gt;, by calling the specific &lt;strong&gt;methods&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;And what are the methods? A method is a function associated with a particular type of object. We can check the available methods with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;methods(mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] mean.Date     mean.default  mean.difftime mean.POSIXct  mean.POSIXlt 
## see &amp;#39;?methods&amp;#39; for accessing help and source code&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(depending on the package, the methods aren’t exported. If you’re dealing with one of those, try using the operator &lt;code&gt;:::&lt;/code&gt;, as &lt;code&gt;dplyr:::filter.tbl_df&lt;/code&gt;, for example!)&lt;/p&gt;
&lt;p&gt;Now we know which methods can be used for the function &lt;code&gt;base::mean&lt;/code&gt;. We can see the code by running the combination &lt;code&gt;desired-function.specific-method&lt;/code&gt;, without the final &lt;code&gt;()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base::mean.default&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## function (x, trim = 0, na.rm = FALSE, ...) 
## {
##     if (!is.numeric(x) &amp;amp;&amp;amp; !is.complex(x) &amp;amp;&amp;amp; !is.logical(x)) {
##         warning(&amp;quot;argument is not numeric or logical: returning NA&amp;quot;)
##         return(NA_real_)
##     }
##     if (na.rm) 
##         x &amp;lt;- x[!is.na(x)]
##     if (!is.numeric(trim) || length(trim) != 1L) 
##         stop(&amp;quot;&amp;#39;trim&amp;#39; must be numeric of length one&amp;quot;)
##     n &amp;lt;- length(x)
##     if (trim &amp;gt; 0 &amp;amp;&amp;amp; n) {
##         if (is.complex(x)) 
##             stop(&amp;quot;trimmed means are not defined for complex data&amp;quot;)
##         if (anyNA(x)) 
##             return(NA_real_)
##         if (trim &amp;gt;= 0.5) 
##             return(stats::median(x, na.rm = FALSE))
##         lo &amp;lt;- floor(n * trim) + 1
##         hi &amp;lt;- n + 1 - lo
##         x &amp;lt;- sort.int(x, partial = unique(c(lo, hi)))[lo:hi]
##     }
##     .Internal(mean(x))
## }
## &amp;lt;bytecode: 0x7fa3988e4430&amp;gt;
## &amp;lt;environment: namespace:base&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s get back to the discovery of error sources. Say we run the following line of code, which won’t go so well:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base::mean(c(&amp;quot;1&amp;quot;, 3))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in mean.default(c(&amp;quot;1&amp;quot;, 3)): argument is not numeric or logical:
## returning NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that this is not an error, but a &lt;code&gt;warning&lt;/code&gt; message. Anyway, the &lt;code&gt;NA&lt;/code&gt; is certainly not the desired output when trying to obtain the mean of two numbers. What happened? We’ll check it by using the code of &lt;code&gt;base::mean.default&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Defining the vector which is the argument of the function
x &amp;lt;- c(&amp;quot;1&amp;quot;, 3)

# Code of  base::mean.default 
if (!is.numeric(x) &amp;amp;&amp;amp; !is.complex(x) &amp;amp;&amp;amp; !is.logical(x)) {
  
  warning(&amp;quot;argument is not numeric or logical: returning NA&amp;quot;)
  return(NA_real_)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: argument is not numeric or logical: returning NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# We can stop here as the error was already found!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the first line of the function, we have the indication of the problem: the vector is neither numeric, complex or logical. If we want the function to work, is must receive those types of objects. Well, now is easier to understand what was done wrong!&lt;/p&gt;
&lt;div id=&#34;why-should-i-try-to-understand-the-errors&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Why should I try to understand the errors?&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Making mistakes is a great way to learn.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Broadly, in my experience with searching errors in functions, I always end up learning something new. The own correction of the error generally leads me to know something that wasn’t quite obvious before. The errors make me look for a better understanding of their existence, which hence leads to an improvement in the comprehension about programming logic and R in general.&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Your own independence.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Is always more efficient being able to solve your own problems. Not rarely, I see questions about R in the internet that take a long time to have a proper answer. With a little deeper search for the source of your errors and its consequent solution, this waiting will be avoided (not that you shouldn’t make questions, of course).&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Exposition to the diversity of “coding styles” we have in the community.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Particularly, I can comment that, since R packages are made by the community, there is a wide diversity in the ways they’re written. The contact with this diversity, aka going deep in how functions are coded, leads me not only to learn more about R but also about how to refine my own coding style.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrap-up&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Wrap-up&lt;/h1&gt;
&lt;p&gt;In this blog post, I explained a bit about how to search for errors in R functions. We talked about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to see the source code of simple functions;&lt;/li&gt;
&lt;li&gt;how to see the source code of the S3 class functions;&lt;/li&gt;
&lt;li&gt;how to use these code for indentifying the erros;&lt;/li&gt;
&lt;li&gt;how we can learn with our own mistakes;&lt;/li&gt;
&lt;li&gt;how we can save time by learning about finding &amp;amp; fixing errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s it for now. I hope you liked it. Any questions can be addressed to me directly or here via comments!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My personal presentation</title>
      <link>/talk/personal-presentation/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/personal-presentation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>R-Ladies Curitiba</title>
      <link>/project/rladies/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/rladies/</guid>
      <description>&lt;p&gt;The R community suffers from an underrepresentation of minority genders (including but not limited to cis/trans women, trans men, non-binary, genderqueer, agender) in every role and area of participation, whether as leaders, package developers, conference speakers, conference participants, educators, or users (see recent stats).&lt;/p&gt;

&lt;p&gt;As a diversity initiative, the mission of R-Ladies is to achieve proportionate representation by encouraging, inspiring, and empowering people of genders currently underrepresented in the R community. R-Ladies’ primary focus, therefore, is on supporting minority gender R enthusiasts to achieve their programming potential, by building a collaborative global network of R leaders, mentors, learners, and developers to facilitate individual and collective progress worldwide.&lt;/p&gt;

&lt;p&gt;The chapter in &lt;a href=&#34;https://github.com/rladies/meetup-presentations_curitiba&#34; target=&#34;_blank&#34;&gt;Curitiba&lt;/a&gt;, (state of Paraná, Brazil), was founded in June 2018.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>1st Meetup R-Ladies São Paulo</title>
      <link>/talk/rladies-sp/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/rladies-sp/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1st Meetup R-Ladies Curitiba</title>
      <link>/talk/rladies-dplyr/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/rladies-dplyr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Chord Based Feature Engineering for Genre Classification in Popular Brazilian Music</title>
      <link>/talk/genre_classification/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/genre_classification/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Music Information Retrieval in R</title>
      <link>/project/r_music/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/r_music/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Non Linear Modelling</title>
      <link>/project/nlmset/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/nlmset/</guid>
      <description>

&lt;h1 id=&#34;targeting-core-symptoms-of-autism-spectrum-disorders-asd-is-a-key-treatment-goal-for-parents-of-children-with-asd-while-many-efficacious-treatments-for-asd-have-been-developed-a-major-obstacle-in-evaluating-these-treatments-among-children-with-asd-has-been-the-lack-of-adequate-outcome-measures-anagnostou-et-al-2014-bolte-diehl-2013-kanne-et-al-2014-most-treatment-studies-have-relied-on-informant-based-measures-i-e-parent-or-clinician-report-that-either-place-a-high-burden-on-families-or-require-significant-training-and-time-to-administer-moreover-measures-are-often-re-purposed-from-existing-measures-intended-for-screening-or-diagnosis-and-do-not-provide-continuous-measures-of-symptoms-that-are-responsive-to-change-thus-there-is-a-clear-need-to-develop-asd-outcome-measures-that-are-reliable-valid-and-sensitive-to-change-in-the-absence-of-such-outcome-measures-our-understanding-of-the-efficacy-of-treatments-for-asd-will-continue-to-be-limited&#34;&gt;Targeting core symptoms of Autism Spectrum Disorders (ASD) is a key treatment goal for parents of children with ASD. While many efficacious treatments for ASD have been developed, a major obstacle in evaluating these treatments among children with ASD has been the lack of adequate outcome measures (Anagnostou et al., 2014; Bolte &amp;amp; Diehl, 2013; Kanne et al., 2014). Most treatment studies have relied on informant-based measures (i.e., parent or clinician report) that either place a high burden on families, or require significant training and time to administer. Moreover, measures are often re-purposed from existing measures intended for screening or diagnosis, and do not provide continuous measures of symptoms that are responsive to change. Thus, there is a clear need to develop ASD outcome measures that are reliable, valid, and sensitive to change. In the absence of such outcome measures, our understanding of the efficacy of treatments for ASD will continue to be limited.&lt;/h1&gt;

&lt;h1 id=&#34;at-the-same-time-automated-methods-for-quantifying-behavior-have-become-more-advanced-less-intrusive-and-more-cost-effective-and-could-provide-reliable-and-sensitive-measures-of-behavioral-change-however-these-methods-have-yet-to-be-translated-into-a-viable-outcome-measure-for-use-in-treatment-studies-for-example-recent-research-has-shown-that-autism-symptoms-can-be-objectively-measured-with-automated-methods-such-as-eye-tracking-rice-moriuchi-jones-klin-2012-natural-language-processing-gorman-et-al-2016-rouhizadeh-et-al-2014-van-santen-sproat-hill-2013-and-quantitative-facial-emotion-analysis-metallinou-grossman-narayanan-2013-and-that-such-measures-are-interpretable-and-meaningful-for-the-everyday-lives-of-children-and-their-families&#34;&gt;At the same time, automated methods for quantifying behavior have become more advanced, less intrusive, and more cost-effective, and could provide reliable and sensitive measures of behavioral change. However, these methods have yet to be translated into a viable outcome measure for use in treatment studies. For example, recent research has shown that autism symptoms can be objectively measured with automated methods such as eye-tracking (Rice, Moriuchi, Jones, &amp;amp; Klin, 2012), natural language processing (Gorman et al., 2016; Rouhizadeh et al., 2014; van Santen, Sproat, &amp;amp; Hill, 2013), and quantitative facial emotion analysis (Metallinou, Grossman, &amp;amp; Narayanan, 2013), and that such measures are interpretable and meaningful for the everyday lives of children and their families.&lt;/h1&gt;

&lt;h1 id=&#34;the-goal-of-this-project-is-to-develop-and-validate-a-novel-objective-measurement-tool-the-multi-modal-autism-phenotype-snapshot-maps-for-use-in-clinical-trials-targeting-core-symptoms-of-autism-maps-uses-automated-methods-to-measure-autism-relevant-behaviors-across-multiple-modalities-gaze-tracking-natural-language-processing-facial-expression-analysis-while-children-watch-and-respond-to-audiovisual-stimuli-presented-on-a-laptop-this-project-was-funded-by-a-catalyst-award-from-the-oregon-clinical-translational-research-institute&#34;&gt;The goal of this project is to develop and validate a novel objective measurement tool, the Multi-modal Autism Phenotype Snapshot (MAPS), for use in clinical trials targeting core symptoms of autism. MAPS uses automated methods to measure autism-relevant behaviors across multiple modalities (gaze-tracking, natural language processing, facial expression analysis) while children watch and respond to audiovisual stimuli presented on a laptop. This project was funded by a Catalyst Award from the Oregon Clinical &amp;amp; Translational Research Institute.&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Shiny Applications for Teaching &amp; Learning</title>
      <link>/project/shiny_education/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/shiny_education/</guid>
      <description>&lt;p&gt;Statistical concepts are not always easy to absorb. Many students remain without fully understanding them, even after spending a good time studying the subject. Sometimes, this can be due to the level of abstraction needed to perceive the behavior of mathematical functions. With this in mind, this project has as one of its main goals to provide a set of interactive applications to help with both teaching and learning of statistics.&lt;/p&gt;

&lt;p&gt;Our intention is to build applications where the users can interact with data, summaries, plots, tables, and so on. Those features will show, for example, how a curve of a probability distribution changes when we vary its parameters and what does that mean for the results. Many topics are included:  data exploring and visualisation, continuous and discrete probability distributions, hypothesis testing, regression models, non-linear models, network analysis, machine learning techniques, and others.&lt;/p&gt;

&lt;p&gt;Shiny applications are simple, easy to build interactive apps. They are made directly from R, and can be available on the web for community access. This way, the combination of interactivity and statistical concepts can be a very useful tool for the general study of statistics.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Construction and Implementation of Multivariate Dispersion Models</title>
      <link>/talk/rbras_2018/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/rbras_2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Music Data Analysis in R</title>
      <link>/talk/1st_rday/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/talk/1st_rday/</guid>
      <description></description>
    </item>
    
    <item>
      <title>chorrrds: Analisando acordes de músicas brasileiras</title>
      <link>/post/2018-04-25-chorrrds/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-04-25-chorrrds/</guid>
      <description>&lt;p&gt;Olá! Tudo bem? Eu sou a &lt;a href=&#34;https://github.com/brunaw&#34;&gt;Bruna&lt;/a&gt;,
e talvez você já me conheça de algum grupo de R no Telegram
ou Facebook, ou mesmo pelo meu outro pacote, o&lt;br /&gt;
&lt;a href=&#34;https://cran.r-project.org/web/packages/vagalumeR/index.html&#34;&gt;vagalumeR&lt;/a&gt;. Eu estou prestes a me formar em Estatística na
UFPR, e esse post vai ter muito a ver com o tema do meu
trabalho de conclusão de curso, que está sendo feito
sob orientação do Professor
&lt;a href=&#34;https://github.com/walmes&#34;&gt;Walmes Zeviani&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recentemente, eu fiz a primeira versão do pacote do meu TCC,
o &lt;code&gt;chorrrds&lt;/code&gt;. Ainda tem muito a ser feito nele, mas os primeiros
resultados já são bem legais. O pacote &lt;code&gt;chorrrds&lt;/code&gt; pode ser
utilizado para a obtenção acordes de músicas, através da
raspagem do site &lt;a href=&#34;https://www.cifraclub.com.br/&#34;&gt;CifraClub&lt;/a&gt;.
Junto com o pacote já vêm diversos bancos de dados
relativos à música brasileira. Ele já está disponível no
CRAN, mas as próximas atualizações devem sair em
primeira mão nesse repositório: &lt;a href=&#34;https://github.com/brunaw/chorrrds&#34; class=&#34;uri&#34;&gt;https://github.com/brunaw/chorrrds&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Instalação
devtools::install_github(&amp;quot;brunaw/chorrrds&amp;quot;)
# ou
install.packages(&amp;quot;chorrrds&amp;quot;) # do CRAN
data(package = &amp;quot;chorrrds&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A base de dados chamada &lt;code&gt;all&lt;/code&gt;, presente no pacote, contém dados
referentes a 106 artistas nacionais, dos genêros: “rock”, “pop”,
“sertanejo”, “MPB”, “bossa nova”, “forró”, “reggae” e “samba”.
Ela já contém, além das variáveis extraídas com o pacote,
as datas de lançamento e a popularidade das músicas, obtidas
através da API do
&lt;a href=&#34;https://github.com/tiagomendesdantas/Rspotify&#34;&gt;Spotify&lt;/a&gt;. Os
detalhes sobre a seleção dos artistas e combinação dos
dados com os do Spotify serão omitidos por enquanto, mas
quem quiser falar sobre isso comigo, pode ficar a vontade :)&lt;/p&gt;
&lt;p&gt;Então vamos lá. Eu vou começar acertando alguns pontos
sobre os dados, já que eles não estão perfeitos, como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deixar apenas os anos de lançamento das músicas, e não a
data completa;&lt;/li&gt;
&lt;li&gt;Encontrar as formas mais simples dos acordes (sem acidentes
ou extensões);&lt;/li&gt;
&lt;li&gt;Conectar a base original com a dos genêros dos artistas;&lt;/li&gt;
&lt;li&gt;Consertar enarmonias, ou seja, transformar as diferentes
versões de um acorde com as mesmas notas em uma coisa só
(por exemplo, Gb passa a ser F#, já que na prática eles
são iguais).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

# Base de gêneros
genre &amp;lt;- chorrrds::genre

da &amp;lt;- chorrrds::all %&amp;gt;% 
  dplyr::mutate(date = stringr::str_extract(date, 
                                            pattern = &amp;quot;[0-9]{4,}&amp;quot;)) %&amp;gt;%
  # Extrai apenas os anos
  dplyr::mutate(date = as.numeric(date), # Deixa as datas como valores numéricos
                acorde = stringr::str_extract(chord, # Extrai as partes fundamentais dos
                                              pattern = &amp;quot;^([A-G]#?b?)&amp;quot;)) %&amp;gt;%  # acordes
  dplyr::filter(date &amp;gt; 1900) %&amp;gt;% # Mantém apenas os anos que fazem sentido
  dplyr::left_join(genre, by = &amp;quot;artist&amp;quot;) %&amp;gt;%  # Traz os gêneros dos artistas
  dplyr::mutate(acorde = case_when( # Contribuição do Julio 
    acorde == &amp;quot;Gb&amp;quot; ~ &amp;quot;F#&amp;quot;,
    acorde == &amp;quot;C#&amp;quot; ~ &amp;quot;Db&amp;quot;,          
    acorde == &amp;quot;G#&amp;quot; ~ &amp;quot;Ab&amp;quot;,
    acorde == &amp;quot;A#&amp;quot; ~ &amp;quot;Bb&amp;quot;,
    acorde == &amp;quot;D#&amp;quot; ~ &amp;quot;Eb&amp;quot;,
    acorde == &amp;quot;E#&amp;quot; ~ &amp;quot;F&amp;quot;,
    acorde == &amp;quot;B#&amp;quot; ~ &amp;quot;C&amp;quot;,
    TRUE ~ acorde)) # Conversão de enarmonias

head(da)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width=&#34;5%&#34; /&gt;
&lt;col width=&#34;41%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;4%&#34; /&gt;
&lt;col width=&#34;21%&#34; /&gt;
&lt;col width=&#34;7%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;music&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;popul&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;chord&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;key&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;artist&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;acorde&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;genre&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ab&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ab&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Db7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Db&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Db7/9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Db&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1992&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto a fabrica do poema&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;D#&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;adriana calcanhotto&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MPB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A base está no formato longo, ou seja, temos uma linha para cada
acorde da música, mantendo a sequência na qual eles aparecem
no site.&lt;/p&gt;
&lt;p&gt;Muito se fala sobre o quanto as músicas no Brasil andam ficando mais
“simples”, ou que alguns genêros musicais são mais ricos que
outros. Com os dados que temos, será que é possível concluir
algo sobre isso olhando simplesmente para a quantidade média
de acordes por música ao longo dos anos? Vejamos o gráfico a
seguir.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;da_g &amp;lt;- da %&amp;gt;% 
  # 2018 ainda não é um ano completo
  dplyr::mutate(date &amp;lt; 2018) %&amp;gt;%  
  # Agrupamento por data + acorde + musica
  dplyr::group_by(date, genre, music, chord) %&amp;gt;% 
  # Mantém os acordes distintos/ano
  dplyr::summarise(distintos = n_distinct(chord)) %&amp;gt;% 
  dplyr::summarise(cont = n()) %&amp;gt;% 
  # Média de acordes distintos nas músicas/ano
  dplyr::summarise(media = mean(cont), contagem = n()) 


# grafico
p &amp;lt;- da_g %&amp;gt;% 
  ggplot(aes(x = date, y = media)) +
  geom_point(colour = &amp;quot;skyblue3&amp;quot;) +
  facet_wrap(&amp;quot;genre&amp;quot;) +
  scale_fill_hue(c = 55, l = 75) +
  geom_smooth(aes(group = genre), span = 0.65, colour = &amp;quot;white&amp;quot;, 
              fill = &amp;quot;tan&amp;quot;, method = &amp;quot;loess&amp;quot;) +
  labs(x = &amp;quot;Anos&amp;quot;, y = &amp;quot;Média de acordes/música&amp;quot;)

# tema para deixar o gráfico bonitinho
tema &amp;lt;- theme(
  legend.position=&amp;#39;none&amp;#39;, 
  axis.line = element_line(size = 0.5, colour = &amp;quot;tan&amp;quot;),
  panel.grid.major = element_line(
    colour = &amp;quot;black&amp;quot;, size = 0.08, linetype = &amp;quot;dotted&amp;quot;),
  panel.border = element_blank(),
  panel.background = element_blank(),
  strip.background = element_rect(colour = &amp;quot;tan&amp;quot;, fill = &amp;quot;white&amp;quot;, size = 0.6), 
  strip.text = element_text(size = 14),
  axis.title = element_text(size = 14),
  axis.text = element_text(size = 12))
  
p + tema&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/2018-04-25-chorrrds/media-acordes-musicas.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Claramente, gêneros como o samba, MPB e bossa nova têm, em geral,
uma quantidade média de acordes distintos por música muito
maior do que os outros. E eles têm mais variação ao longo dos
anos também, o que pode ser um reflexo da maior criatividade
envolvida nestes genêros. Os menores valores, como é
esperado, estão principalmente no sertanejo, que é um
genêro conhecidamente mais uniforme na questão harmônica.&lt;/p&gt;
&lt;p&gt;Nós podemos avançar um pouco e olhar para os próprios artistas.
Quem será que usa as maiores quantidades de acordes
distintos em suas composições? Vamos ver o próximo gráfico,
que mostra apenas os artistas com mediana maior do que 8
acordes diferentes por música.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;da_g &amp;lt;- da %&amp;gt;%   
  dplyr::mutate(artist = stringr::str_to_title(artist)) %&amp;gt;% 
  # Agrupamento por artista + música
  dplyr::group_by(artist, genre, music) %&amp;gt;% 
  # Mantém os acordes distintos
  dplyr::summarise(distintos = n_distinct(chord)) %&amp;gt;% 
  # Obtém a mediana e quantis de acordes distintos por música/artistas
  dplyr::summarise(med = median(distintos), 
                   contagem = n(),
                   inf = quantile(distintos)[2],
                   sup = quantile(distintos)[4])


# grafico
p &amp;lt;- da_g %&amp;gt;%
  dplyr::filter(med &amp;gt; 8) %&amp;gt;% 
  ggplot(aes(x = reorder(artist, med), y = med)) +
  geom_pointrange(aes(ymin = inf, ymax = sup, colour = genre), size = 0.7) + 
  scale_colour_hue(c = 55, l = 75) +
  coord_flip() +
  labs(colour = &amp;quot;Gênero&amp;quot;, 
       x = &amp;quot;Artistas&amp;quot;, 
       y = &amp;quot;Primeiro quartil, mediana e terceiro quartil&amp;quot;)

# tema
tema &amp;lt;- theme(
  axis.line = element_line(size = 0.5, 
                           colour = &amp;quot;tan&amp;quot;),
  panel.grid.major = element_line(colour = &amp;quot;black&amp;quot;, 
                                  size = 0.08, 
                                  linetype = &amp;quot;dotted&amp;quot;),
  panel.border = element_blank(),
  panel.background = element_blank(),
  axis.text = element_text(size = 12), 
  axis.title.x = element_text(size = 16),
  axis.title.y = element_text(size = 16))

p + tema&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/blog/2018-04-25-chorrrds/stats-artistas.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E &lt;em&gt;voilá&lt;/em&gt;. A primeira posição é ocupada por um dos maiores
musicistas brasileiros, que é referência internacional em questões
de harmonia: Chico Buarque. Logo em seguida, temos o Reinaldo,
um dos maiores sambistas que o Brasil já conheceu, e o
Pixinguinha, um gênio do choro. E assim a lista segue, com
artistas principalmente da bossa nova, samba e MPB. Demora
até que apareça o primeiro dos rockeiros nesta lista, que
é a Rita Lee. Dos membros do sertanejo, nenhum chega a
aparecer no gráfico, mostrando que a “variedade” harmônica
deste gênero musical é mesmo bem baixa.&lt;/p&gt;
&lt;p&gt;Até agora está legal mas, com música, sempre pode
ficar ainda mais. A ideia mais recente que o meu caro
orientador &lt;a href=&#34;https://github.com/walmes&#34;&gt;Walmes Zeviani&lt;/a&gt;
teve para o nosso trabalho é de
encadear as transições entre os acordes em um diagrama
de cordas. Vocês já ouviram falar desse diagrama? Eu
mal o conheço e já considero pacas.&lt;/p&gt;
&lt;p&gt;O diagrama de cordas é um método gráfico (e lindo)
de explicitar relações entre grupos ou
indivíduos. Os grupos ficam arranjados de forma radial/circular,
e as cordas que aparecem dentro do círculo demonstram
as conexões entre eles e suas forças. Pra quem sabe um pouquinho
sobre harmonia, vai ser sensacional ver o quanto isso faz
sentido (mas também não vou entrar nesse mérito agora).&lt;/p&gt;
&lt;p&gt;O exemplo que eu vou mostrar aqui é extremamente simples.
Antes eu separei, dos acordes “crus” retirados do CifraClub,
apenas a parte fundamental deles. Isto é, desconsiderei
se um acorde tem notas extras, acidentes e maior/menor.
Ou seja, aqui nós só veremos acordes como C, D, B, A#, o
miolo da coisa. Podemos perder informação fazendo isso? Sim,
e bastante. Mas como eu disse, esse caso é pra ser bem simples mesmo.&lt;/p&gt;
&lt;p&gt;Enfim, vamos voltar ao exemplo. A seguir, eu considero como
uma “transição” quando um acorde aparece em sequência do outro
(exemplo de transição muito comum: dó-sol). O código abaixo
constrói o diagrama de cordas através do pacote &lt;code&gt;chordiag&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;mattflor/chorddiag&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Ordenando por círculo das quintas
ordem &amp;lt;- c(&amp;quot;G&amp;quot;, &amp;quot;D&amp;quot;, &amp;quot;A&amp;quot;, &amp;quot;E&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;F#&amp;quot;, 
           &amp;quot;Db&amp;quot;, &amp;quot;Ab&amp;quot;, &amp;quot;Eb&amp;quot;, &amp;quot;Bb&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;C&amp;quot;)

da$acorde &amp;lt;- factor(da$acorde, levels = ordem)

comp &amp;lt;- data.frame(
  acorde = da$acorde, 
  seq = dplyr::lead(da$acorde)) %&amp;gt;% # Pega o acorde &amp;quot;seguinte&amp;quot;
  dplyr::group_by(acorde, seq) %&amp;gt;%  # Agrupa por cada transição
  dplyr::summarise(contagem = n()) # Conta quantas são as transições

mat_comp &amp;lt;- reshape2::dcast(comp,   # Arranja em do tipo matriz quadrada
                            acorde ~ seq, value.var = &amp;quot;contagem&amp;quot;) 
mm &amp;lt;- as.matrix(mat_comp[ ,-1]) # Converte o df em matriz (exigência do pacote)
mm[is.na(mm)] &amp;lt;- 0 # Substitui na por 0 (exigência do pacote)
dimnames(mm) &amp;lt;- list(acorde = unique(mat_comp$acorde),
                     seq = unique(mat_comp$acorde))

# Constrói o diagrama interativo
chorddiag::chorddiag(mm, showTicks = FALSE,
                     palette = &amp;quot;Set2&amp;quot;, palette2 = &amp;quot;#Set3&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;center&gt;
&lt;iframe src=&#34;https://r-music.github.io/rday-2018/docs/chorrrds&#34; width=&#34;100%&#34; height=&#34;650&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/center&gt;
&lt;p&gt;Vejam que interessante. Como eu disse antes, uma das
relações mais fortes do diagrama é o C-G (ou dó-sol),
que é justificada teoricamente, já que o G é a quinta do
C. O mesmo acontece com D-A, A-E, F-C e assim por diante.
Quem quiser saber mais sobre esse comportamento, pode
dar uma olhada &lt;a href=&#34;https://ledgernote.com/columns/music-theory/circle-of-fifths-explained/&#34;&gt;aqui&lt;/a&gt;.
Transições meio malucas, como
B-Bb, também acontecem. “Maluca” porque um acorde
bemol, indicado pelo “b”, é aquele cuja raíz esta
meio tom abaixo do indicado pela letra anterior,
que neste caso é o B (si), então esse acontecimento não
faz muito sentido.&lt;/p&gt;
&lt;div id=&#34;consideracoes-finais&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Considerações Finais&lt;/h1&gt;
&lt;p&gt;O que vimos aqui é um pedaço da análise inicial do meu TCC,
que ainda não está nem um pouco pronto. São exemplos
simples das informações podemos extrair com o pacote &lt;code&gt;chorrrds&lt;/code&gt;,
e o universo de possibilidades é infinito. Isso que nós nem
começamos a falar sobre as conexões que podem ser feitas
com a API do Spotify, o pacote &lt;code&gt;music21&lt;/code&gt;, que é do próprio
Julio Trecenti, com as letras das músicas,…&lt;/p&gt;
&lt;p&gt;Além disso, om certeza, meu objetivo com os gráficos apresentados
não é fazer nenhum tipo de juízo de valor sobre os genêros
por conta de “complexidade harmônica”. Diga-se de passagem,
eu mesma sou bem fã de todos esses genêros, desde a MPB
até o sertanejo :D&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;agradecimentos&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Agradecimentos&lt;/h1&gt;
&lt;p&gt;Ao meu orientador, &lt;a href=&#34;https://github.com/walmes&#34;&gt;Walmes Zeviani&lt;/a&gt;,
que fez eu me apaixonar pelo R, e ao
&lt;a href=&#34;http://curso-r.com/author/julio/&#34;&gt;Julio Trecenti&lt;/a&gt;, que é tão
entusiasta do meu TCC quanto eu, e já fez diversas contribuições
valiosas.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>RMarkdown Course</title>
      <link>/talk/markdown-course/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/talk/markdown-course/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
